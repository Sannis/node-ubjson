/**
 * Dependencies.
 */

var
  fs = require('fs'),
  path = require('path'),
  utils = require('../utils'),
  koala = require('../koala/lib/koala.js'),
  markdown = require('../markdown/lib/markdown.js');

/**
 * Split file into blocks, extract description
 *
 *  - foo
 *    - bar
 *  - baz
 *
 * @param {String} file
 * @return {Object}
 * @api public
 */

exports.splitFile = function (file, showPrivate, ignoreShabang) {
  var
    str = fs.readFileSync(file, 'utf8'),
    parts,
    blocks = [],
    block,
    i, len,
    part,
    next;
  
  // Parse markdown to HTML
  str =  markdown.toHTML(str);
  
  // Ignore all text before first h2 header
  str =  str.substr(str.indexOf('<h2>'));
  
  // Split file into parts
  parts = str.split(/(<h2>[^]+?<\/h2>)/g);
  
  // Loop over parts and make comment-code pairs
  for (i = 0, len = parts.length; i < len; i += 1) {
    part = parts[i];
    next = parts[i + 1] || '';
    // Empty
    if (/^\s*$/.test(part)) {
      continue;
    } else {
      i += 1;
      
      next = next.trim();
      
      // Highlight code inside <pre>
      next = next.replace(/<pre><code>([^]+?)<\/code><\/pre>/gm, function (match, code) {
        return '<pre class="shell"><code>' + koala.render('.sh', utils.unescape(code)) + '</code></pre>';
      });
      
      blocks.push({
        type: '',
        comment: part,
        code: next
      });
    }
  }
  
  return blocks;
};

